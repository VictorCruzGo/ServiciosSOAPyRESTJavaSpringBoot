package bo.gob.sin.sre.feel.fedu.test;

import static org.junit.Assert.assertTrue;

import java.net.URL;
import java.util.Date;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;

import org.junit.Test;

import bo.gob.sin.sre.fac.cfec.dto.interfaces.IRespuesta;
import bo.gob.sin.sre.fac.cfec.dto.interfaces.SolicitudAnulacion;
import bo.gob.sin.sre.fac.cfec.dto.interfaces.SolicitudRecepcion;
import bo.gob.sin.sre.fac.cfec.dto.interfaces.SolicitudValidacionAnulacion;
import bo.gob.sin.sre.fac.cfec.dto.interfaces.SolicitudValidacionRecepcion;
import bo.gob.sin.sre.feel.fedu.service.IServicioFacturaElectronicaSectorEducativo;

public class TestRecepcionIndivualP04 {

	public static final String NOMBRE_SERVICIO = "ServicioFacturacionService";
	public static final String URL = "http://localhost:39164/FacturaElectronicaSectorEducativo?wsdl";
	public static final String TARGET_NAME_SPACE = "https://siat.impuestos.gob.bo/FacturaElectronicaSectorEducativo";

	/*
	 * RECEPCION INDIVIDUAL
	 */
	@Test
	public void recepcionIndivual() throws Exception {
		//errror en firma Invalida
		URL urlWsdl = new URL(URL);
		QName nombreServicio = new QName(TARGET_NAME_SPACE, NOMBRE_SERVICIO);
		Service servicioSoap = Service.create(urlWsdl, nombreServicio);
		IServicioFacturaElectronicaSectorEducativo servicio = servicioSoap
				.getPort(IServicioFacturaElectronicaSectorEducativo.class);
		SolicitudRecepcion solicitud = new SolicitudRecepcion();
		solicitud.setCodigoSistema("9BB347E");
		solicitud.setCodigoAmbiente(2);
		solicitud.setCodigoEmision(1);
		solicitud.setCodigoModalidad(1);
		solicitud.setNit(1020703023L);
		solicitud.setCuis("FC809F97");
		solicitud.setCufd("2E3B2E8DE90CB3F848ADC6826DB3AF61");
		solicitud.setCodigoDocumentoFiscal(1);
		solicitud.setCodigoDocumentoSector(2);
		solicitud.setCodigoSucursal(0);
		solicitud.setCodigoPuntoVenta(0);
		solicitud.setFechaEnvio(new Date());
		solicitud.setArchivo(
				"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");
		solicitud.setHashArchivo("607491d276719296ee7edc0f160dd9d8bf6c967963be6c05e334e84eb7212920");		
		IRespuesta respuesta = servicio.recepcion(solicitud);
		System.out.print("Resultado: " + respuesta.toString());
		assertTrue(respuesta.isTransaccion());
	}

	
}