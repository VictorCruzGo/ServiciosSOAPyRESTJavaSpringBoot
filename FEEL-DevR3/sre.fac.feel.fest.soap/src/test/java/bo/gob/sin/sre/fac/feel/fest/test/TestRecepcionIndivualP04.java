package bo.gob.sin.sre.fac.feel.fest.test;

import static org.junit.Assert.assertTrue;

import java.net.URL;
import java.util.Date;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;

import org.junit.Test;

import bo.gob.sin.sre.fac.cfec.dto.interfaces.IRespuesta;
import bo.gob.sin.sre.fac.cfec.dto.interfaces.SolicitudAnulacion;
import bo.gob.sin.sre.fac.cfec.dto.interfaces.SolicitudRecepcion;
import bo.gob.sin.sre.fac.cfec.dto.interfaces.SolicitudValidacionAnulacion;
import bo.gob.sin.sre.fac.cfec.dto.interfaces.SolicitudValidacionRecepcion;
import bo.gob.sin.sre.fac.feel.fest.service.IServicioFacturaElectronicaEstandar;

public class TestRecepcionIndivualP04 {

	public static final String NOMBRE_SERVICIO = "ServicioFacturacionService";
	public static final String URL = "http://localhost:39113/FacturaElectronicaEstandar?wsdl";
	public static final String TARGET_NAME_SPACE = "https://siat.impuestos.gob.bo/FacturaElectronicaEstandar";
	String rutaArchivoEntrada = "D:\\PruebaServicio\\archivo.xml";

	/*
	 * RECEPCION INDIVIDUAL
	 */
	@Test
	public void recepcionIndivual04() throws Exception {
		// electronica - error en la firma
		URL urlWsdl = new URL(URL);
		QName nombreServicio = new QName(TARGET_NAME_SPACE, NOMBRE_SERVICIO);
		Service servicioSoap = Service.create(urlWsdl, nombreServicio);
		IServicioFacturaElectronicaEstandar servicio = servicioSoap.getPort(IServicioFacturaElectronicaEstandar.class);
		SolicitudRecepcion solicitud = new SolicitudRecepcion();
		solicitud.setCodigoSistema("FC809F97");
		solicitud.setCodigoAmbiente(2);
		solicitud.setCodigoEmision(1);
		solicitud.setCodigoModalidad(2);
		solicitud.setNit(1020703023L);
		solicitud.setCuis("10DC8801");
		solicitud.setCufd("2E3B2E8DE90CB3F848ADC6826DB3AF61");
		solicitud.setCodigoDocumentoFiscal(1);
		solicitud.setCodigoDocumentoSector(1);
		solicitud.setCodigoSucursal(0);
		solicitud.setCodigoPuntoVenta(0);
		solicitud.setFechaEnvio(new Date());
		solicitud.setArchivo(
				"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");
		solicitud.setHashArchivo("3fc071876890c923ce4c4b757a09ce83848129cf784f748c816a93714731ac8a");
		IRespuesta respuesta = servicio.recepcion(solicitud);
		System.out.print("Resultado: " + respuesta.toString());
		assertTrue(respuesta.isTransaccion());
	}

	
}
